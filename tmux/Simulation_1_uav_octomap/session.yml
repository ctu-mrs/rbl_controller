# do not modify these
root: ./
name: simulation
socket_name: mrs
attach: false
tmux_options: -f /etc/ctu-mrs/tmux.conf
# you can modify these
pre_window: export UAV_NAME=uav1; export RUN_TYPE=simulation; export UAV_TYPE=x500; export BOND=false; export CUSTOM_CONFIG=./config/custom_config.yaml; export WORLD_CONFIG=./config/world_config.yaml; export NETWORK_CONFIG=./config/network_config.yaml; export PLATFORM_CONFIG=`rospack find mrs_multirotor_simulator`/config/mrs_uav_system/$UAV_TYPE.yaml
startup_window: activation
windows:
  - roscore:
      layout: tiled
      panes:
        - roscore

  - core:
      layout: tiled
      panes:
        - waitForHw; roslaunch mrs_uav_core core.launch
          platform_config:=`rospack find mrs_uav_gazebo_simulation`/config/mrs_uav_system/$UAV_TYPE.yaml
          custom_config:=./config/custom_config.yaml
          world_config:=./config/world_config.yaml
          network_config:=./config/network_config.yaml
  # - simulator:
  #     layout: tiled
  #     panes:
  #       - waitForRos; roslaunch mrs_multirotor_simulator multirotor_simulator.launch custom_config:=./config/simulator.yaml
  
  # - hw_api:
  #     layout: tiled
  #     panes:
  #       - waitForTime; export UAV_NAME=uav1; roslaunch mrs_multirotor_simulator hw_api.launch custom_config:=./config/hw_api.yaml nodelet_manager_name:=$UAV_NAME\_nodelet_manager

  - hw_api:
      layout: tiled
      panes:
        - waitForTime; roslaunch mrs_uav_px4_api api.launch
        
  # - control:
  #     layout: tiled
  #     panes:
  #       - export UAV_NAME=uav1; waitForTime; roslaunch mrs_uav_core core.launch
  
  - rbl_controller:
      layout: tiled
      panes:
        - export UAV_NAME=uav1; waitForTime; roslaunch rbl_controller controller.launch custom_config:=./config/rbl_controller.yaml

  - gazebo:
      layout: tiled
      panes:
        - waitForRos; roslaunch mrs_uav_gazebo_simulation simulation.launch world_name:=forest gui:=true
        - waitForControl; gz camera -c gzclient_camera -f $UAV_NAME; history -s gz camera -c gzclient_camera -f $UAV_NAME

  - spawn:
      layout: tiled
      panes:
        - waitForGazebo; rosservice call /mrs_drone_spawner/spawn "1 $UAV_TYPE --pos 0 0 1 0 --enable-rangefinder --enable-ouster model:=OS0-128 use_gpu:=True"

  - mapplan:
      layout: tiled
      panes:
        - waitForHw; roslaunch mrs_octomap_mapping_planning mapplan.launch
          config_octomap_server:=../../../mrs_octomap_mapping_planning/ros_packages/mrs_octomap_mapping_planning/tmux/simulation_example/config/octomap_server.yaml
          config_octomap_planner:=./config/octomap_planner.yaml
          config_pcl_filter_ouster:=../../../mrs_octomap_mapping_planning/ros_packages/mrs_octomap_mapping_planning/tmux/simulation_example/config/ouster_filter_mapping.yaml
          config_pcl_filter_rs_front:=../../../mrs_octomap_mapping_planning/ros_packages/mrs_octomap_mapping_planning/tmux/simulation_example/config/rs_front_filter.yaml
          config_pcl_filter_rs_down:=../../../mrs_octomap_mapping_planning/ros_packages/mrs_octomap_mapping_planning/tmux/simulation_example/config/rs_down_filter.yaml

  # - uvdar:
  #     layout: tiled
  #     panes:
  #       - waitForControl; roslaunch uvdar_multirobot_simulator example.launch
        
  # - lidar:
  #     layout: tiled
  #     panes:
  #       - export UAV_NAME=uav1; waitForControl; roslaunch laserscan_clusters example.launch

        
  # - replanner:
  #     layout: tiled
  #     panes:
  #       - export UAV_NAME=uav1; waitForControl; roslaunch replanner example.launch

  - activation:
      layout: tiled
      synchronize: after
      panes:
        - export UAV_NAME=uav1; waitForControl; history -s rosservice call /$UAV_NAME/rbl_controller/activation

  # - fly_to_start:
  #     layout: tiled
  #     synchronize: after
  #     panes:
  #       - export UAV_NAME=uav1; waitForControl; history -s rosservice call /$UAV_NAME/rbl_controller/fly_to_start

  # - automatic_start:
  #     layout: tiled
  #     panes:
  #       - export UAV_NAME=uav1; waitForTime; roslaunch mrs_uav_autostart automatic_start.launch custom_config:=./config/automatic_start.yaml
  
  # - gazebo: 
  #   layout: tiled
  #   panes: 
  #     - waitForRos; roslaunch mrs_uav_gazebo_simulation simulation.launch world_name:=forest gui:=true
      # - roslaunch mrs_simulation simulation.launch gui:=true world_name:=forest

  - takeoff:
      layout: tiled
      panes:
        - waitForHw; roslaunch mrs_uav_autostart automatic_start.launch
        - 'waitForControl; rosservice call /$UAV_NAME/hw_api/arming 1; sleep 2; rosservice call /$UAV_NAME/hw_api/offboard'
  - goto:
      layout: tiled
      panes:
        - 'history -s rosservice call /$UAV_NAME/octomap_planner/goto \"goal: \[0.0, 60.0, 2.0, 0.0\]\"'

  # - tf_connector:
  #     layout: tiled
  #     panes:
  #       - waitForTime; roslaunch mrs_tf_connector tf_connector.launch custom_config:=./config/tf_connector.yaml
  #       - waitForControl; roslaunch mrs_rviz_plugins load_robot.launch

  - rviz:
      layout: tiled
      panes:
        - waitForControl; rosrun rviz rviz -d ../../../mrs_octomap_mapping_planning/ros_packages/mrs_octomap_mapping_planning/tmux/simulation_example/rviz.rviz
        - waitForControl; roslaunch mrs_rviz_plugins load_robot.launch
        - waitForTime; waitForControl; roslaunch mrs_rviz_plugins rviz_interface.launch rviz_topic_name:='/move_base_simple/goal' reference_service_name:="/$UAV_NAME/octomap_planner/reference"
  # - rviz:
  #     layout: tiled
  #     panes:
  #       - waitForControl; rosrun rviz rviz -d ./rviz.rviz
  - layout:
      layout: tiled
      panes:
        - waitForControl; sleep 5; ~/.i3/layout_manager.sh ./layout.json



